{"version":3,"file":"reviewing.min.js","sources":["../src/reviewing.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Implements reviewing functionality\n *\n * @module     local_overflow/reviewing\n * @copyright  2022 Justus Dieckmann WWU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Ajax from 'core/ajax';\nimport Prefetch from 'core/prefetch';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Init function.\n */\nexport function init() {\n    Prefetch.prefetchTemplates(['local_overflow/reject_post_form', 'local_overflow/review_buttons']);\n    Prefetch.prefetchStrings('local_overflow',\n        ['post_was_approved', 'jump_to_next_post_needing_review', 'there_are_no_posts_needing_review', 'post_was_rejected']);\n\n    const root = document.getElementById('overflow-posts');\n    root.onclick = async(e) => {\n        const action = e.target.getAttribute('data-overflow-action');\n\n        if (!action) {\n            return;\n        }\n\n        const post = e.target.closest('*[data-overflow-postid]');\n        const reviewRow = e.target.closest('.reviewrow');\n        const postID = post.getAttribute('data-overflow-postid');\n\n        if (action === 'approve') {\n            reviewRow.innerHTML = '.';\n            const nextPostURL = await Ajax.call([{\n                methodname: 'local_overflow_review_approve_post',\n                args: {\n                    postid: postID,\n                }\n            }])[0];\n\n            let message = await getString('post_was_approved', 'local_overflow') + ' ';\n            if (nextPostURL) {\n                message += `<a href=\"${nextPostURL}\">`\n                    + await getString('jump_to_next_post_needing_review', 'local_overflow')\n                    + \"</a>\";\n            } else {\n                message += await getString('there_are_no_posts_needing_review', 'local_overflow');\n            }\n            reviewRow.innerHTML = message;\n            post.classList.remove(\"pendingreview\");\n        } else if (action === 'reject') {\n            reviewRow.innerHTML = '.';\n            reviewRow.innerHTML = await Templates.render('local_overflow/reject_post_form', {});\n        } else if (action === 'reject-submit') {\n            const rejectMessage = post.querySelector('textarea.reject-reason').value.toString().trim();\n            reviewRow.innerHTML = '.';\n            const args = {\n                postid: postID,\n                reason: rejectMessage ? rejectMessage : null\n            };\n            const nextPostURL = await Ajax.call([{\n                methodname: 'local_overflow_review_reject_post',\n                args: args\n            }])[0];\n\n            let message = await getString('post_was_rejected', 'local_overflow') + ' ';\n            if (nextPostURL) {\n                message += `<a href=\"${nextPostURL}\">`\n                    + await getString('jump_to_next_post_needing_review', 'local_overflow')\n                    + \"</a>\";\n            } else {\n                message += await getString('there_are_no_posts_needing_review', 'local_overflow');\n            }\n            reviewRow.innerHTML = message;\n        } else if (action === 'reject-cancel') {\n            reviewRow.innerHTML = '.';\n            reviewRow.innerHTML = await Templates.render('local_overflow/review_buttons', {});\n        }\n    };\n}"],"names":["prefetchTemplates","prefetchStrings","document","getElementById","onclick","async","action","e","target","getAttribute","post","closest","reviewRow","postID","innerHTML","nextPostURL","Ajax","call","methodname","args","postid","message","classList","remove","Templates","render","rejectMessage","querySelector","value","toString","trim","reason"],"mappings":";;;;;;;wGA+BaA,kBAAkB,CAAC,kCAAmC,oDACtDC,gBAAgB,iBACrB,CAAC,oBAAqB,mCAAoC,oCAAqC,sBAEtFC,SAASC,eAAe,kBAChCC,QAAUC,MAAAA,UACLC,OAASC,EAAEC,OAAOC,aAAa,4BAEhCH,oBAICI,KAAOH,EAAEC,OAAOG,QAAQ,2BACxBC,UAAYL,EAAEC,OAAOG,QAAQ,cAC7BE,OAASH,KAAKD,aAAa,2BAElB,YAAXH,OAAsB,CACtBM,UAAUE,UAAY,UAChBC,kBAAoBC,cAAKC,KAAK,CAAC,CACjCC,WAAY,qCACZC,KAAM,CACFC,OAAQP,WAEZ,OAEAQ,cAAgB,mBAAU,oBAAqB,kBAAoB,IAEnEA,SADAN,YACW,mBAAYA,wBACX,mBAAU,mCAAoC,kBACpD,aAEW,mBAAU,oCAAqC,kBAEpEH,UAAUE,UAAYO,QACtBX,KAAKY,UAAUC,OAAO,sBACnB,GAAe,WAAXjB,OACPM,UAAUE,UAAY,IACtBF,UAAUE,gBAAkBU,mBAAUC,OAAO,kCAAmC,SAC7E,GAAe,kBAAXnB,OAA4B,OAC7BoB,cAAgBhB,KAAKiB,cAAc,0BAA0BC,MAAMC,WAAWC,OACpFlB,UAAUE,UAAY,UAChBK,KAAO,CACTC,OAAQP,OACRkB,OAAQL,eAAgC,MAEtCX,kBAAoBC,cAAKC,KAAK,CAAC,CACjCC,WAAY,oCACZC,KAAMA,QACN,OAEAE,cAAgB,mBAAU,oBAAqB,kBAAoB,IAEnEA,SADAN,YACW,mBAAYA,wBACX,mBAAU,mCAAoC,kBACpD,aAEW,mBAAU,oCAAqC,kBAEpEH,UAAUE,UAAYO,YACJ,kBAAXf,SACPM,UAAUE,UAAY,IACtBF,UAAUE,gBAAkBU,mBAAUC,OAAO,gCAAiC"}